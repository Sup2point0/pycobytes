/// Core Styles

@use './src/styles/_nova' as *;
@use './src/styles/_variables' as *;
@use './src/styles/_fonts' as *;

@use './src/styles/anim' as *;
@use './src/styles/links' as *;
@use './src/styles/code-blocks' as *;
@use './src/styles/flavour' as *;


:root {
  color-scheme: light dark;
}

html, body {
  width: 100%;
  margin: 0;
  padding: 0;
}

body {
  @include font-body;
}

.duality-container {
  color: light-dark(black, white);
  background-color: light-dark(#f9f9f9, #00172a);
  @include fade-duality;
}

:where(h2,h3,h4) {
  @include font-head;
  color: light-dark($col-accent, $col-flavour);
}

code {
  @include font-mono;
}

p code {
  padding: 0.2em 0.4em;
  margin: 0;
  white-space: break-spaces;
  background-color: rgba(175, 184, 193, 0.2);
  border-radius: 6px;
}

b, strong {
  font-weight: 600;
}

blockquote {
  margin: 0;
  padding: 0 1rem;
  color: $grey-nova;
  border-left: 2px solid light-dark($grey-spirit, $blue-deep);
}

img {
  max-width: 100%;
  object-fit: contain;
}

hr {
  color: light-dark($grey-nova, $blue-deep);
}

// selection colours should override everything else
:not(code, code > *)::selection {
  color: white !important;
  background-color: light-dark($col-accent, $col-flavour) !important;
}

.material-symbols-outlined {
  font-variation-settings:
    'FILL' 0,
    'wght' 400,
    'GRAD' 0,
    'opsz' 24
}

.error {
  color: $red-nova;
}

.pyb-flavour {
  &.left   { color: light-dark($light-accent-prot, $dark-accent-prot); }
  &.centre { color: light-dark($grey-nova, $blue-ocean); }
  &.right  { color: light-dark($light-accent-deut, $dark-accent-deut); }
}
