
### What’s this for?
I originally came up with pyco:bytes as a supplement to the other programming competitions going on at my school – I thought, given the ubiquity of Python as an introductory programming language, it’d be awesome (and hopefully somewhat helpful) to show everyone all the cool stuff you can do in the language.

### What level do I need to be at?
Yeah, that’s a difficult one. Pycobytes was primarily conceived with intermediates in mind – that is, programmers who’ve grasped the basics of coding, but now want to expand their knowledge to a much wider world of programming. So, it does assume some familiarity with the basics of Python.

Of course, I’ve tried to make the information as clear and accessible as possible, so anyone is welcome to read it – even if you’re a 15-year-old kid with 18 years of experience, who knows, maybe you’ll learn something unexpected ;)

### Can I learn Python from pycobytes?
I mean, we’re absolutely learning *more* about Python here, but if you’re asking this question I imagine you’re more likely referring to the fundamentals. This series will cover those no doubt, and in fairly substantial detail – that being said, it’s not intended to be a full tutorial or course, so if you’ve never coded much but want to learn more, I think you’d be better off finding a dedicated course or tutorial online (or even better, whip up a project and pick it up as you go along!)

I’d say think of pycobytes as *enrichment* to deepen your understanding of Python and programming in general =)

### What even is there to learn in Python?
Well, well, well, I’m glad you asked. There is *so* much incredible stuff to learn in Python, so so much. If you’re curious, stick around ;)
<!-- If you’re in doubt, just take a look at the [index](https://sup2point0.github.io/pycobytes/issues) ;) -->

### How did you create all this?
See [Hacking the Mainframe](https://sup2point0.github.io/pycobytes/dev)!

### Where did the name come from?
BLOOD AND DEATH

\*cough\* In all seriousness, *many* alternatives were considered. As we know, there are only 2 hard problems in computer science: cache invalidation, naming things, and off-by-one errors.

Anyway, a picobyte doesn’t actually exist, but I think it conveys the intent here pretty well =)

### How do you pronounce pyco:bytes?
Hmm, ain’t that a question?

### Why the colon in pyco:bytes?
Idek, I just thought it’d be perfect when designing the logo.

### What does ‘pips’ mean?
Hey Vsauce, Michael here!

### What are these colours?
[supcode Nova](https://github.com/Sup2point0/supcode/tree/sup/resources/Nova)! Like ’em?
